name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # - name: Check out code
      #   uses: actions/checkout@v3
      #
      # - name: Cache Go modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      # - name: Test with Coverage
      #   run: go test -coverprofile=coverage.txt -covermode=atomic ./...
      #
      # - name: Upload Coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage.txt

  release:
    name: Release
    needs: test
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      new_release_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/changelog

      - name: Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(npx semantic-release --dry-run --no-ci | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [ -n "$VERSION" ]; then
            npx semantic-release
          fi

      - name: Get Version
        id: get_version
        run: echo "version=${{ steps.semantic.outputs.version }}" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: release
    if: needs.release.outputs.new_release_version != ''
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.release.outputs.new_release_version }}
    secrets: inherit

  upload-dev:
    name: Upload to R2
    needs: [release, build]
    if: needs.release.outputs.new_release_version != ''
    uses: ./.github/workflows/upload-to-r2-dev.yml
    with:
      version: ${{ needs.release.outputs.new_release_version }}
    secrets: inherit

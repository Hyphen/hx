name: Deployment to Dev

on:
  push:
    branches:
      - main

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.set_output.outputs.new_version }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  

      - name: Fetch all tags and latest release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          LATEST_RELEASE_VERSION=$(gh release view --json tagName -q '.tagName')
          echo "LATEST_RELEASE_VERSION=$LATEST_RELEASE_VERSION" >> $GITHUB_ENV

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git

      - name: Determine version and update .version file
        run: |
          CURRENT_VERSION=$(cat .version || echo "0.0.0-rc0")
          RELEASE_VERSION=$(semantic-release --dry-run --no-ci 2>&1 | grep 'Release note for version' | awk '{print $NF}' | tr -d ':')
          if [[ $RELEASE_VERSION == $(echo $CURRENT_VERSION | sed 's/-rc[0-9]*//') ]]; then
            RC_NUMBER=$(echo $CURRENT_VERSION | sed 's/.*-rc\([0-9]*\)/\1/')
            NEW_VERSION=$(echo $CURRENT_VERSION | sed "s/-rc[0-9]*/-rc$((RC_NUMBER+1))/")
          else
            NEW_VERSION="${RELEASE_VERSION}-rc1"
          fi
          echo $NEW_VERSION > .version

      - name: Print version
        run: |
          echo "Current version: $(cat .version)"
          echo "Release version: $RELEASE_VERSION"
          echo "New version: $NEW_VERSION"

      - name: Commit .version file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: update version to ${{ env.NEW_VERSION }}"
          file_pattern: .version

      - name: Set output
        id: set_output
        run: echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

  extract-version:
    needs: versioning
    runs-on: ubuntu-latest
    outputs:
      version_without_v: ${{ steps.strip_v.outputs.version_without_v }}
    steps:
      - name: Strip 'v' prefix from version
        id: strip_v
        run: echo "version_without_v=$(echo ${{ needs.versioning.outputs.new_version }} | sed 's/^v//')" >> $GITHUB_OUTPUT

  build:
    needs: [versioning, extract-version]
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.extract-version.outputs.version_without_v }}

  upload:
    needs: [build, extract-version]
    uses: ./.github/workflows/upload-pacakge-to-r2.yml
    with:
      version: ${{ needs.extract-version.outputs.version_without_v }}
      package_name: hyphen-cli-dev
    secrets: inherit

name: Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    name: Build on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            arch: linux
          - os: macos-latest
            goos: darwin
            goarch: amd64
            arch: macos
          - os: macos-latest
            goos: darwin
            goarch: arm64
            arch: macos-arm
          - os: windows-latest
            goos: windows
            goarch: amd64
            arch: windows

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Setup Environment Variables
        run: |
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          echo "GOOS=${{ matrix.goos }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
          echo "CGO_ENABLED=0" >> $GITHUB_ENV
        shell: bash

      - name: Get dependencies
        run: go mod tidy

      - name: Build for Unix-like systems
        if: runner.os != 'Windows'
        run: go build -v -ldflags="-X github.com/Hyphen/cli/cmd/version.Version=${{ env.VERSION }}" -o hyphen-${{ env.VERSION }}-${{ matrix.arch }}
        shell: bash

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: pwsh -Command 'go build -v -ldflags="-X github.com/Hyphen/cli/cmd/version.Version=${{ env.VERSION }}" -o hyphen-${{ env.VERSION }}-${{ matrix.arch }}.exe'

      - name: Sign Windows Artifact with CodeSignTool
        if: runner.os == 'Windows'
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          credential_id: ${{ secrets.ES_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }}
          file_path: ${GITHUB_WORKSPACE}/hyphen-${{ env.VERSION }}-${{ matrix.arch }}.exe
          output_path: ${GITHUB_WORKSPACE}/artifacts
          malware_block: false
          environment_name: PROD

      - name: Set execution permissions
        if: runner.os != 'Windows'
        run: chmod +x hyphen-${{ env.VERSION }}-${{ matrix.arch }}

      - name: Upload binaries for Unix-like systems
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: hyphen-${{ env.VERSION }}-${{ matrix.arch }}
          path: hyphen-${{ env.VERSION }}-${{ matrix.arch }}

      - name: Upload binaries for Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: hyphen-${{ env.VERSION }}-${{ matrix.arch }}
          path: ${GITHUB_WORKSPACE}/artifacts/hyphen-${{ env.VERSION }}-${{ matrix.arch }}.exe
